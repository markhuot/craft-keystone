{% do view.registerAssetBundle("markhuot\\keystone\\assetbundles\\KeystoneAssetBundle") %}

<style>
    ul ul .foo { display: block; }
    ul:not(:has(ul li)) .baz { display: none; }
</style>

{% macro layer(component, element, field) %}
    {% set lastOrder = 0 %}
    {% set slots = component.getType().getSlotDefinitions() %}
    {% for slot in slots %}
        {% if slots|length > 1 %}
            <div class="k-block k-uppercase k-text-[8px] k-ml-[2rem] k-text-gray-400">{{ slot.name ?? 'content' }}</div>
        {% endif %}
        <ul class="k-relative" style="margin-left: 2rem;">
            <div class="k-absolute baz" style="top: 1.3rem; left: 0.5rem; bottom: 0; border-left: 1px solid rgba(96,125,159,.25);"></div>
            {% for child in component.getSlot(slot.name) %}
                <li draggable="true"
                    data-draggable="{{ child.id }}"
                    data-draggable-type="{{ child.getType().getHandle() }}"
                    data-draggable-type-name="{{ child.getType().getName() }}"
                    data-dragtarget="{{ child.id }}"
                    data-dragtarget-slot="{{ slot.name }}"
                    data-dragtarget-whitelist="{{ slot.whitelist|join(',') }}"
                    data-dragtarget-blacklist="{{ slot.blacklist|join(',') }}"
                >
                    <div class="k-flex k-justify-between" data-draggable-row>
                        <div class="k-relative">
                            <div class="foo k-hidden" style="height:10px; width: 2rem; position: absolute; top: 0.4em; left: calc(-1.5rem + 0px); border-radius: 0 0 0 10px; border-width: 0 0 1px 1px; border-color: rgba(96,125,159,.25); box-shadow: -2px 2px 0 white;"></div>
                            {% set params = {id: child.id, elementId: child.elementId, fieldId: field.id} %}
                            <a class="k-text-link" href="{{ cpUrl('keystone/components/edit', params) }}" data-open-keystone-component-editor='{{ params|json_encode }}'>
                                <div style="background: white; display: inline-block; position: relative; padding: 4px;">{{ child.getType().getIcon({class: 'k-w-4 k-inline'}) }}</div>
                                {{ child.getType().getName() }}
                            </a>
                            {{ hiddenInput('nodes[]', child.id ~ '@' ~ child.dateUpdated) }}
                        </div>
                    </div>
                    {{ _self.layer(child, element, field) }}
                </li>
                {% set lastOrder = lastOrder + 1 %}
            {% endfor %}
            <li data-dragtarget="{{ component.id }}"
                data-dragtarget-position="beforeend"
                data-dragtarget-slot="{{ slot.name }}"
                data-dragtarget-whitelist="{{ slot.whitelist|join(',') }}"
                data-dragtarget-blacklist="{{ slot.blacklist|join(',') }}"
            >
                <div data-draggable-row class="k-relative">
                    <div class="foo k-hidden" style="height:10px; width: 2rem; position: absolute; top: 0.4em; left: calc(-1.5rem + 0px); border-radius: 0 0 0 10px; border-width: 0 0 1px 1px; border-color: rgba(96,125,159,.25); box-shadow: -2px 2px 0 white;"></div>
                    <button data-open-keystone-component-selector='{{ {
                        elementId: element.id,
                        fieldId: field.id,
                        path: component.getChildPath(),
                        slot: slot.name,
                        sortOrder: lastOrder
                    }|json_encode }}' class="k-text-gray-400" style="background: white;">
                        <div style="background: white; display: inline-block; position: relative; padding: 4px;">
                            <svg class="k-w-4 k-inline k-stroke-current" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 256 256"><path d="M128,26A102,102,0,1,0,230,128,102.12,102.12,0,0,0,128,26Zm0,192a90,90,0,1,1,90-90A90.1,90.1,0,0,1,128,218Zm46-90a6,6,0,0,1-6,6H134v34a6,6,0,0,1-12,0V134H88a6,6,0,0,1,0-12h34V88a6,6,0,0,1,12,0v34h34A6,6,0,0,1,174,128Z"></path></svg>
                        </div>
                        Add
                    </button>
                </div>
            </li>
        </ul>
    {% endfor %}
{% endmacro %}

<div style="margin-left: -2rem;" data-field-id="{{ field.id }}">
    {{ _self.layer(component, element, field) }}
</div>
